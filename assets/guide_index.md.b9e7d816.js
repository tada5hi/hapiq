import{_ as e,c as t,o as i,a as r}from"./app.a73e47dd.js";const g=JSON.parse('{"title":"What is it?","description":"","frontmatter":{},"headers":[{"level":2,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]}],"relativePath":"guide/index.md"}'),o={name:"guide/index.md"},s=r('<h1 id="what-is-it" tabindex="-1">What is it? <a class="header-anchor" href="#what-is-it" aria-hidden="true">#</a></h1><p>Rapiq (<strong>R</strong>est <strong>Api</strong> <strong>Q</strong>uery) is a library to build an efficient interface between client- &amp; server-side applications. It defines a format for the request, but <strong>not</strong> for the response.</p><div class="warning custom-block"><p class="custom-block-title"><strong>Important NOTE</strong></p><p>The guide is under construction \u2602 at the moment. So please stay patient or contribute to it, till it covers all parts \u2B50.</p></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-hidden="true">#</a></h2><ul><li><code>fields</code><ul><li>Description: Return only specific fields or extend the default selection.</li><li>URL-Parameter: <strong>fields</strong></li></ul></li><li><code>filters</code><ul><li>Description: Filter the data set, according to specific criteria.</li><li>URL-Parameter: <strong>filter</strong></li></ul></li><li><code>relations</code><ul><li>Description: Include related resources of the primary data.</li><li>URL-Parameter: <strong>include</strong></li></ul></li><li><code>pagination</code><ul><li>Description: Limit the number of resources returned from the entire collection.</li><li>URL-Parameter: <strong>page</strong></li></ul></li><li><code>sort</code><ul><li>Description: Sort the resources according to one or more keys in asc/desc direction.</li><li>URL-Parameter: <strong>sort</strong></li></ul></li></ul>',5),a=[s];function n(l,c,d,p,u,h){return i(),t("div",null,a)}const f=e(o,[["render",n]]);export{g as __pageData,f as default};
